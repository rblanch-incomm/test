apply plugin: 'com.android.application'

def getAppVersionCode = { ->
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : 1
    return code
}

def getAppVersionName = { ->
    def name = project.hasProperty('versionName') ? versionName : "1.0"
    return name
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.rrblanch_incomm.myapplication"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode getAppVersionCode()
        versionName getAppVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

apply plugin: BumpReadMeVersionPlugin

class BumpReadMeVersionPlugin implements Plugin<Project> {

    @Override
    void apply(Project project) {
        project.task('bumpVersion') << {
            group = 'test'
            description = 'Updates the README to the latest version'

            File readMe = new File(project.rootDir.absolutePath + "/README.md")
            String contents = readMe.getText('UTF-8')
            contents = contents.replaceAll("test:.*", "test: ${project.android.defaultConfig.versionName}")
            readMe.write(contents, 'UTF-8')
        }
    }
}

//task bumpVersion {
//    group = 'test'
//    description = 'Updates the README to the latest version'
//
//    File readMe = new File(rootDir.absolutePath + "/README.md")
//    String contents = readMe.getText('UTF-8')
//    contents = contents.replaceAll("test:.*", "test: ${android.defaultConfig.versionName}")
//    readMe.write(contents, 'UTF-8')
//}